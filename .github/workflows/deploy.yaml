name: Deploy SokaFT api to VPS

on:
    push:
        branches:
            - master

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup .NET 8
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 8.0.x

            - name: Install SSH client
              run: sudo apt-get install -y openssh-client

            - name: Install dependencies
              run: dotnet tool install --global dotnet-ef

            - name: Restore dependencies
              run: dotnet restore

            - name: Retrieve DB from VPS
              run: sshpass -p "${{ secrets.FTP_PASSWORD }}" scp -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }}:/home/jikai/soka/soka.sqlite ./soka-api/soka.sqlite

            - name: Retrieve Migrations from VPS
              run: sshpass -p "${{ secrets.FTP_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }}:/home/jikai/soka/Migrations ./soka-api

            - name: Generate random migration name
              id: generate-name
              run: |
                # Generate random migr name
                RANDOM_NAME="Migration_$(date +%Y%m%d_%H%M%S)_$((1 + RANDOM % 1000))"
                echo "Generated migration name: $RANDOM_NAME"
                echo "migration_name=$RANDOM_NAME" >> $GITHUB_OUTPUT

            - name: Create Migration locally
              run: dotnet ef migrations add "${{ steps.generate-name.outputs.migration_name }}" --project soka-api

            - name: Apply Migration locally
              run: dotnet ef database update --project soka-api

            - name: Show DB
              run: ls -lhtr

            - name: Clean remote directory via SSH
              uses: appleboy/ssh-action@v1
              with:
                  host: ${{ secrets.FTP_SERVER }}
                  username: ${{ secrets.FTP_USERNAME }}
                  password: ${{ secrets.FTP_PASSWORD }}
                  script: find /home/jikai/soka -mindepth 1 -type f -not -name 'appsettings.json' -exec rm -f {} +

            - name: Send DB to VPS
              run: sshpass -p "${{ secrets.FTP_PASSWORD }}" scp -o StrictHostKeyChecking=no ./soka-api/soka.sqlite ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }}:/home/jikai/soka/soka.sqlite

            - name: Send Migrations to VPS
              run: sshpass -p "${{ secrets.FTP_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ./soka-api/Migrations ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }}:/home/jikai/soka

            - name: Publish
              run: dotnet publish --output ./publish

            - name: Deploy
              uses: appleboy/scp-action@v1
              with:
                  host: ${{ secrets.FTP_SERVER }}
                  username: ${{ secrets.FTP_USERNAME }}
                  password: ${{ secrets.FTP_PASSWORD }}
                  port: 22
                  source: './publish/*'
                  target: '/home/jikai/soka'
                  strip_components: 1

            - name: Restart soka service via SSH
              uses: appleboy/ssh-action@v1
              with:
                  host: ${{ secrets.FTP_SERVER }}
                  username: ${{ secrets.FTP_USERNAME }}
                  password: ${{ secrets.FTP_PASSWORD }}
                  script: sudo systemctl restart soka-api.service